{"ast":null,"code":"import { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction UserAPI(token) {\n  const [isLogged, setIsLogged] = useState(false);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    if (token) {\n      const getUser = async () => {\n        try {\n          const res = await axios.get('/user/infor', {\n            headers: {\n              Authorization: token\n            }\n          });\n          setIsLogged(true);\n          res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false);\n          setCart(res.data.cart);\n        } catch (err) {\n          alert(err.response.data.msg);\n        }\n      };\n\n      getUser();\n    }\n  }, [token]);\n\n  const addCart = async product => {\n    if (!isLogged) return alert(\"Vui lòng đăng nhập để tiếp tục mua hàng\");\n    const check = cart.every(item => {\n      return item._id !== product._id;\n    });\n\n    if (check) {\n      setCart([...cart, { ...product,\n        quantity: 1\n      }]);\n      await axios.patch('/user/addcart', {\n        cart: [...cart, { ...product,\n          quantity: 1\n        }]\n      }, {\n        headers: {\n          Authorization: token\n        }\n      });\n    } else {\n      alert(\"Sản phẩm đã được thêm vào giỏ hàng\");\n    }\n  };\n\n  return {\n    isLogged: [isLogged, setIsLogged],\n    isAdmin: [isAdmin, setIsAdmin],\n    cart: [cart, setCart],\n    addCart: addCart\n  };\n}\n\nexport default UserAPI;","map":{"version":3,"sources":["C:/Users/Pham Thanh Long/Desktop/Web_Dong_Ho/client/src/api/UserAPI.js"],"names":["useState","useEffect","axios","UserAPI","token","isLogged","setIsLogged","isAdmin","setIsAdmin","cart","setCart","getUser","res","get","headers","Authorization","data","role","err","alert","response","msg","addCart","product","check","every","item","_id","quantity","patch"],"mappings":"AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACpB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIG,KAAJ,EAAW;AACP,YAAMO,OAAO,GAAG,YAAY;AACxB,YAAI;AACA,gBAAMC,GAAG,GAAG,MAAMV,KAAK,CAACW,GAAN,CAAU,aAAV,EAAyB;AACvCC,YAAAA,OAAO,EAAE;AAAEC,cAAAA,aAAa,EAAEX;AAAjB;AAD8B,WAAzB,CAAlB;AAIAE,UAAAA,WAAW,CAAC,IAAD,CAAX;AACAM,UAAAA,GAAG,CAACI,IAAJ,CAASC,IAAT,KAAkB,CAAlB,GAAsBT,UAAU,CAAC,IAAD,CAAhC,GAAyCA,UAAU,CAAC,KAAD,CAAnD;AAEAE,UAAAA,OAAO,CAACE,GAAG,CAACI,IAAJ,CAASP,IAAV,CAAP;AAEH,SAVD,CAUE,OAAOS,GAAP,EAAY;AACVC,UAAAA,KAAK,CAACD,GAAG,CAACE,QAAJ,CAAaJ,IAAb,CAAkBK,GAAnB,CAAL;AACH;AACJ,OAdD;;AAgBAV,MAAAA,OAAO;AAEV;AACJ,GArBQ,EAqBN,CAACP,KAAD,CArBM,CAAT;;AAyBA,QAAMkB,OAAO,GAAG,MAAOC,OAAP,IAAmB;AAC/B,QAAI,CAAClB,QAAL,EAAe,OAAOc,KAAK,CAAC,yCAAD,CAAZ;AAEf,UAAMK,KAAK,GAAGf,IAAI,CAACgB,KAAL,CAAWC,IAAI,IAAI;AAC7B,aAAOA,IAAI,CAACC,GAAL,KAAaJ,OAAO,CAACI,GAA5B;AACH,KAFa,CAAd;;AAIA,QAAIH,KAAJ,EAAW;AACPd,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAAU,EAAE,GAAGc,OAAL;AAAcK,QAAAA,QAAQ,EAAE;AAAxB,OAAV,CAAD,CAAP;AAEA,YAAM1B,KAAK,CAAC2B,KAAN,CAAY,eAAZ,EAA6B;AAAEpB,QAAAA,IAAI,EAAE,CAAC,GAAGA,IAAJ,EAAU,EAAE,GAAGc,OAAL;AAAcK,UAAAA,QAAQ,EAAE;AAAxB,SAAV;AAAR,OAA7B,EAA+E;AACjFd,QAAAA,OAAO,EAAE;AAAEC,UAAAA,aAAa,EAAEX;AAAjB;AADwE,OAA/E,CAAN;AAIH,KAPD,MAOO;AACHe,MAAAA,KAAK,CAAC,oCAAD,CAAL;AACH;AACJ,GAjBD;;AAmBA,SAAO;AACHd,IAAAA,QAAQ,EAAE,CAACA,QAAD,EAAWC,WAAX,CADP;AAEHC,IAAAA,OAAO,EAAE,CAACA,OAAD,EAAUC,UAAV,CAFN;AAGHC,IAAAA,IAAI,EAAE,CAACA,IAAD,EAAOC,OAAP,CAHH;AAIHY,IAAAA,OAAO,EAAEA;AAJN,GAAP;AAOH;;AAED,eAAenB,OAAf","sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nfunction UserAPI(token) {\n    const [isLogged, setIsLogged] = useState(false)\n    const [isAdmin, setIsAdmin] = useState(false)\n    const [cart, setCart] = useState([])\n\n    useEffect(() => {\n        if (token) {\n            const getUser = async () => {\n                try {\n                    const res = await axios.get('/user/infor', {\n                        headers: { Authorization: token }\n                    })\n\n                    setIsLogged(true)\n                    res.data.role === 1 ? setIsAdmin(true) : setIsAdmin(false)\n\n                    setCart(res.data.cart)\n\n                } catch (err) {\n                    alert(err.response.data.msg)\n                }\n            }\n\n            getUser()\n\n        }\n    }, [token])\n\n\n\n    const addCart = async (product) => {\n        if (!isLogged) return alert(\"Vui lòng đăng nhập để tiếp tục mua hàng\")\n\n        const check = cart.every(item => {\n            return item._id !== product._id\n        })\n\n        if (check) {\n            setCart([...cart, { ...product, quantity: 1 }])\n\n            await axios.patch('/user/addcart', { cart: [...cart, { ...product, quantity: 1 }] }, {\n                headers: { Authorization: token }\n            })\n\n        } else {\n            alert(\"Sản phẩm đã được thêm vào giỏ hàng\")\n        }\n    }\n\n    return {\n        isLogged: [isLogged, setIsLogged],\n        isAdmin: [isAdmin, setIsAdmin],\n        cart: [cart, setCart],\n        addCart: addCart,\n\n    }\n}\n\nexport default UserAPI\n"]},"metadata":{},"sourceType":"module"}